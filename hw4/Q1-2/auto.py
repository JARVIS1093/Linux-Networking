import subprocess
import os
print("creating veth pairs")
os.system("sudo docker run -itd --privileged --name lc1 new_image")
os.system("sudo docker run -itd --privileged --name lc2 new_image")
os.system("sudo docker run -itd --privileged --name sc1 new_image")
os.system("sudo docker run -itd --privileged --name sc2 new_image")
os.system("sudo ip link add l1s1 type veth peer name s1l1")
os.system("sudo ip link add l1s2 type veth peer name s2l1")
os.system("sudo ip link add l2s1 type veth peer name s1l2")
os.system("sudo ip link add l2s2 type veth peer name s2l2")

pid=[]
cont=["lc1","lc2","sc1","sc2"]

for i in range(0,len(cont)):
 
  output = subprocess.Popen("sudo docker inspect -f '{{.State.Pid}}' "+cont[i], stdout=subprocess.PIPE, shell=True)
  (out, err) = output.communicate()
  pid.append(out)  
print("pid:",pid)
print("sending veth pairs to leaf and spine containers")
os.system("sudo ip link set l1s1 netns " + pid[0])
os.system("sudo ip link set s1l1 netns " + pid[2])
os.system("sudo ip link set l1s2 netns " + pid[0])
os.system("sudo ip link set s2l1 netns " + pid[3])
os.system("sudo ip link set l2s1 netns " + pid[1])
os.system("sudo ip link set s1l2 netns " + pid[2])
os.system("sudo ip link set l2s2 netns " + pid[1])
os.system("sudo ip link set s2l2 netns " + pid[3])
print("adding ip addresses")
os.system("sudo docker exec lc1 ip addr add 45.0.0.1/24 dev l1s1")
os.system("sudo docker exec lc1 ip addr add 47.0.0.1/24 dev l1s2")
os.system("sudo docker exec lc2 ip addr add 46.0.0.1/24 dev l2s1")
os.system("sudo docker exec lc2 ip addr add 48.0.0.1/24 dev l2s2")
os.system("sudo docker exec sc1 ip addr add 45.0.0.2/24 dev s1l1")
os.system("sudo docker exec sc1 ip addr add 46.0.0.2/24 dev s1l2")
os.system("sudo docker exec sc2 ip addr add 47.0.0.2/24 dev s2l1")
os.system("sudo docker exec sc2 ip addr add 48.0.0.2/24 dev s2l2")
print("setting links up")
os.system("sudo docker exec lc1 ip link set dev l1s1 up")
os.system("sudo docker exec lc1 ip link set dev l1s2 up")
os.system("sudo docker exec lc2 ip link set dev l2s1 up")
os.system("sudo docker exec lc2 ip link set dev l2s2 up")
os.system("sudo docker exec sc1 ip link set dev s1l1 up")
os.system("sudo docker exec sc1 ip link set dev s1l2 up")
os.system("sudo docker exec sc2 ip link set dev s2l1 up")
os.system("sudo docker exec sc2 ip link set dev s2l2 up")
print("starting ip forwarding")
os.system("sudo docker exec lc1 echo 1 > /proc/sys/net/ipv4/ip_forward")
os.system("sudo docker exec lc2 echo 1 > /proc/sys/net/ipv4/ip_forward")
os.system("sudo docker exec sc1 echo 1 > /proc/sys/net/ipv4/ip_forward")
os.system("sudo docker exec sc2 echo 1 > /proc/sys/net/ipv4/ip_forward")
print("creating gre tunnel 0-1")
os.system("sudo docker exec lc1 ip tunnel add gretun0 mode gre local 47.0.0.1 remote 48.0.0.1")
os.system("sudo docker exec lc1 ip link set gretun0 up")
os.system("sudo docker exec lc2 ip tunnel add gretun1 mode gre local 48.0.0.1 remote 47.0.0.1")
os.system("sudo docker exec lc2 ip link set gretun1 up")
print("adding routes in lc1")
os.system("sudo docker exec lc1 ip route add 46.0.0.1 via 45.0.0.2 dev l1s1")
os.system("sudo docker exec lc1 ip route add 48.0.0.1 via 47.0.0.2 dev l1s2")
print('adding routes in lc2')
os.system("sudo docker exec lc2 ip route add 45.0.0.1 via 46.0.0.2 dev l2s1")
os.system("sudo docker exec lc2 ip  route add 47.0.0.1 via 48.0.0.2 dev l2s2 ")


